version: '3.8'

services:
  reverse-proxy:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
#     - "--providers.file.watch=true"
#      - "--providers.file.filename=simplified_certificates.yml"
#      - "--providers.file.filename=/etc/traefik/dynamic_conf/simplified_certificates.yml"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/certs:ro"
      - "./traefik_dynamic_conf:/etc/traefik/dynamic_conf:ro"
    networks:
      - frontend-network
      - backend-network
    env_file:
      - .env

  frontend:
    image: frontend-image:latest
    ports:
      - "3000:5173"
    environment:
      - NODE_ENV=development
      - VITE_USE_HTTPS=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - frontend-network
    depends_on:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.docker.network=frontend-network"

  backend:
    image: backend-image:latest
    environment:
      - NODE_ENV=development
      - PORT=5000
    volumes:
      - ./backend/src:/app/src:delegated
      - ./backend/nodemon.json:/app/nodemon.json
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    networks:
      - backend-network
    depends_on:
      - reverse-proxy
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.docker.network=backend-network"
    env_file:
      - .env

  mongo:
    image: mongo-image:6.0
    volumes:
      - mongo-data:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    networks:
      - backend-network
    labels:
      - "traefik.docker.network=backend-network"
    env_file:
      - .env

  redis:
    image: redis:6.2
    volumes:
      - redis-data:/data
    networks:
      - backend-network
    labels:
      - "traefik.docker.network=backend-network"

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  mongo-data:
  uploads:
  redis-data:


# to run:
# docker-compose -f containers-docker-compose.yml up -d

# to stop:
# docker-compose -f containers-docker-compose.yml down